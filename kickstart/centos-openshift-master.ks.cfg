#
#  From https://github.com/kaorimatz/packer-templates
#
# TODO use %include https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html
# This has become "OpenShift allinone on VirtualBox" specific.


lang en_US.UTF-8
keyboard fr-pc
#keyboard us

# Will use time from the host
timezone --utc --nontp Europe/Paris

install
text
skipx
reboot


# Direct connexion:
#url --url=http://dl.fedoraproject.org/pub/fedora/linux/releases/$releasever/Everything/$basearch/os/ --proxy=FCKNG_HTTP_PROXY
#repo --name="Fed-updates" --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/updates/$releasever/$basearch/

# Default local RPM cache (see Readme)
url --url=http://10.0.2.2/centos/$releasever/os/$basearch/
repo --name="Cent-updates" --baseurl=http://10.0.2.2/centos/$releasever/updates/$basearch/
repo --name="EPEL" --baseurl=http://10.0.2.2/epel/$releasever/$basearch/

# Local cache on vboxnet0
#url --url=http://192.168.56.1/fedora/releases/$releasever/Everything/$basearch/os/
#repo --name="Fed-updates" --baseurl=http://192.168.56.1/fedora/updates/$releasever/$basearch/

# OpenShift Specific
repo --name="CentOS-OpenShift-Origin" --baseurl=http://mirror.centos.org/centos/$releasever/paas/$basearch/openshift-origin/ --install 


# For debug
#rootpw --plaintext toto
user --name=toto --groups=users,wheel  # --password=toto

# This is why I use an fixed IP with a nameserver, just so it is installed on this IP instead of the dynamic 10.0.2... used for external access (via NAT)
# VirtualBox specific ... 
network --device=enp0s8 --bootproto=static --ip=192.168.56.10 --nodns --netmask=255.255.255.0 --noipv6 --hostname=ocp-1.192.168.56.10.nip.io --nodefroute    # 192.168... host-only  
network --device=enp0s3 --noipv6  # 10.0.2 ... NAT

services --enabled=sshd,docker,nfs
firewall --enabled --service=nfs
#selinux --disabled


bootloader --location=mbr
zerombr
clearpart --all --initlabel

## OpenShift needs a free space (on VG)  for Docker Storage Setup. 
#autopart --type=plain
part swap --asprimary --fstype="swap" --size=1024
part /boot --fstype xfs --size=200
part pv.01 --asprimary  --size=1 --grow
part pv.02 --asprimary  --size=2000
volgroup root pv.01
volgroup nfs  pv.02
# We don't use all the available space on purpose. Docker storage will create a Volume
logvol /             --fstype xfs  --name=lvRoot --vgname=root --size=4000
# NFS takes all its VolGroup. We may add others PV later if needed.
logvol /var/nfs-data --fstype ext4 --name=lvNFS  --vgname=nfs  --size=1 --grow

# This will be 300 packages, about Mo
%packages  --excludedocs # --nocore --excludedocs --ignoremissing
@core --nodefaults
openssh-server
iproute
#epel-release already installed above
-alsa*
-dracut*
-dracut-network
which
#zsh
-plymouth*
-ruby
-openldap
-postfix
-man-db

origin 
origin-clients
atomic-openshift-utils 
docker 
vim-enhanced
httpd-tools
ansible
libselinux-python

# NFS Share
nfs-utils

# For VirtualBox (requires EPEL repo)
bzip2 
kernel-devel
make
dkms    

-btrfs*
-iwl*
-ivtv-*
%end


%post --erroronfail

echo -e "%wheel	ALL=(ALL)	NOPASSWD: ALL"        >> /etc/sudoers
echo -e "%users  localhost=/sbin/shutdown -h now" >> /etc/sudoers
echo -e "Defaults env_keep += \"http_proxy https_proxy no_proxy\"" >> /etc/sudoers

sed -i '/requiretty/d' /etc/sudoers

#---- Install SSH key ----
mkdir -m0700 /home/toto/.ssh/

# Add your own public key!
cat <<EOF >/home/toto/.ssh/authorized_keys
ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNpTGKUp8I7AvQWdDqy8MzXByW1oRpLcqhXgEmocJ/PxiZFx9pOp5H8L7WLFeeysrCRhlDEWMl+oiaI1wNV01RU= bruno
EOF

### set permissions and SELinux
chmod 0600 /home/toto/.ssh/authorized_keys
chown -R toto:users /home/toto/.ssh
restorecon -R /home/toto/.ssh/

# NFS server
mkdir -p /var/nfs-data/{pv01,pv02,pv03,pv04,pv05}
chown -R nfsnobody:nfsnobody /var/nfs-data/
chmod -R 0770 /var/nfs-data/
cat <<EOF >/etc/exports
/var/nfs-data/pv01 *(rw,root_squash)
/var/nfs-data/pv02 *(rw,root_squash)
/var/nfs-data/pv03 *(rw,root_squash)
/var/nfs-data/pv04 *(rw,root_squash)
/var/nfs-data/pv05 *(rw,root_squash)
EOF

# OpenShift will use NFS (Not sure if it is required on server AND clients)
setsebool -P virt_use_nfs 1
setsebool -P virt_sandbox_use_nfs 1

# PaaS OpenShift repo is not perfect yet ...
rpm --import https://tdawson.fedorapeople.org/centos/RPM-GPG-KEY-CentOS-SIG-PaaS

## Network config
sed -i 's/\[main\]/\[main\]\ndns=none/' /etc/NetworkManager/NetworkManager.conf


## We could have been more explicit about Interfaces and Zones
## By defaults it is all "public"
# firewall-cmd --permanent --zone=public --add-service=nfs

%end

